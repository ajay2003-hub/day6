class Solution {
    public int findFirst(int arr[],int target){
        int s=0;
        int e=arr.length-1;
        int ans=-1;
        while(s<=e){
            int mid=s+(e-s)/2;
            if(arr[mid]==target){
                ans=mid;
                e=mid-1;
            }
            else if(arr[mid]>target){
                e=mid-1;
            }else{
                s=mid+1;
            }

            mid=s+(e-s)/2;
        }
        return ans;
    }
    public int findLast(int arr[],int target){
        int s=0;
        int e=arr.length-1;
        int ans=-1;
        while(s<=e){
            int mid=s+(e-s)/2;
            if(arr[mid]==target){
                ans=mid;
                s=mid+1;
            }
            else if(arr[mid]>target){
                e=mid-1;
            }else{
                s=mid+1;
            }

            mid=s+(e-s)/2;
        }
        return ans;
    }
    public int[] searchRange(int[] nums, int target) {
        int n=nums.length;
        int result[]=new int[2];
        result[0]=findFirst(nums,target);
        result[1]=findLast(nums,target);
        return result;
        
        
    }
}
