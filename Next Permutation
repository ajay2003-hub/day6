class Solution {
    public void nextPermutation(int[] nums) {
        //find pivot element
        int n= nums.length;
        int pivot=-1;
        for(int i=n-2;i>=0;i--){
            if(nums[i]<nums[i+1]){
                pivot=i;
                break;
            }
        }

        if(pivot==-1){
            Arrays.sort(nums);
            return;
        }

        //swap(RMGE,pivot)
        //find rmge
        
        for(int i=n-1;i>pivot;i--){
            if(nums[i]>nums[pivot]){
                int temp=nums[pivot];
                nums[pivot]=nums[i];
                nums[i]=temp;
                break;
            }
        }
        

        //then reverse order pivot+1 to n-1
        int f=pivot+1;
        int l=n-1;
        while(f<l){
            int temp2=nums[f];
            nums[f]=nums[l];
            nums[l]=temp2;
            f++;
            l--;
        }
        return ;

        

        
    }
}
